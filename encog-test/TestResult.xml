<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\encog-cs\encog-test\Encog-test.nunit" total="55" errors="0" failures="0" not-run="0" ignored="0" skipped="0" invalid="0" date="2009-06-27" time="17:20:09">
  <environment nunit-version="2.5.0.9122" clr-version="2.0.50727.3082" os-version="Microsoft Windows NT 5.1.2600 Service Pack 3" platform="Win32NT" cwd="C:\encog-cs\encog-test" machine-name="JEFF-F9BE40219C" user="Administrator" user-domain="JEFF-F9BE40219C" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="C:\encog-cs\encog-test\Encog-test.nunit" executed="True" success="True" time="6.125" asserts="0">
    <results>
      <test-suite name="C:\encog-cs\encog-test\encog-test\bin\Release\encog-test.dll" executed="True" success="True" time="6.109" asserts="0">
        <results>
          <test-suite name="encog_test" executed="True" success="True" time="6.094" asserts="0">
            <results>
              <test-suite name="Data" executed="True" success="True" time="3.750" asserts="0">
                <results>
                  <test-suite name="CSV" executed="True" success="True" time="0.344" asserts="0">
                    <results>
                      <test-suite name="TestCSVNeuralData" executed="True" success="True" time="0.328" asserts="0">
                        <results>
                          <test-case name="encog_test.Data.CSV.TestCSVNeuralData.CSVData" executed="True" success="True" time="0.328" asserts="12" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Market" executed="True" success="True" time="1.906" asserts="0">
                    <results>
                      <test-suite name="Loader" executed="True" success="True" time="1.609" asserts="0">
                        <results>
                          <test-suite name="TestYahooLoader" executed="True" success="True" time="1.609" asserts="0">
                            <results>
                              <test-case name="encog_test.Data.Market.Loader.TestYahooLoader.Loader" executed="True" success="True" time="1.609" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="TestMarketData" executed="True" success="True" time="0.297" asserts="0">
                        <results>
                          <test-case name="encog_test.Data.Market.TestMarketData.MarketData" executed="True" success="True" time="0.281" asserts="66" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="SQL" executed="True" success="True" time="1.313" asserts="0">
                    <results>
                      <test-suite name="TestSQLDataSet" executed="True" success="True" time="1.313" asserts="0">
                        <results>
                          <test-case name="encog_test.Data.SQL.TestSQLDataSet.SQLDataSet" executed="True" success="True" time="1.313" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Temporal" executed="True" success="True" time="0.063" asserts="0">
                    <results>
                      <test-suite name="TestTemporal" executed="True" success="True" time="0.063" asserts="0">
                        <results>
                          <test-case name="encog_test.Data.Temporal.TestTemporal.ActivationTemporal" executed="True" success="True" time="0.016" asserts="6" />
                          <test-case name="encog_test.Data.Temporal.TestTemporal.BasicTemporal" executed="True" success="True" time="0.016" asserts="55" />
                          <test-case name="encog_test.Data.Temporal.TestTemporal.FormatTemporal" executed="True" success="True" time="0.016" asserts="13" />
                          <test-case name="encog_test.Data.Temporal.TestTemporal.HiLowTemporal" executed="True" success="True" time="0.000" asserts="16" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="XML" executed="True" success="True" time="0.125" asserts="0">
                    <results>
                      <test-suite name="TestXMLNeuralData" executed="True" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="encog_test.Data.XML.TestXMLNeuralData.XMLNeuralData" executed="True" success="True" time="0.125" asserts="14" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Matrix" executed="True" success="True" time="0.063" asserts="0">
                <results>
                  <test-suite name="TestBiPolarUtil" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="encog_test.Matrix.TestBiPolarUtil.Binary" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="encog_test.Matrix.TestBiPolarUtil.Bipolar2double" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="encog_test.Matrix.TestBiPolarUtil.Double2bipolar" executed="True" success="True" time="0.000" asserts="8" />
                    </results>
                  </test-suite>
                  <test-suite name="TestMatrix" executed="True" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="encog_test.Matrix.TestMatrix.Add" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrix.Boolean" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrix.Clear" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="encog_test.Matrix.TestMatrix.ColumnMatrix" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="encog_test.Matrix.TestMatrix.GetCol" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="encog_test.Matrix.TestMatrix.GetRow" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="encog_test.Matrix.TestMatrix.IsVector" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="encog_test.Matrix.TestMatrix.IsZero" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="encog_test.Matrix.TestMatrix.MatrixConstruct" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="encog_test.Matrix.TestMatrix.MatrixEquals" executed="True" success="True" time="0.000" asserts="2" />
                      <test-case name="encog_test.Matrix.TestMatrix.MatrixEqualsPrecision" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="encog_test.Matrix.TestMatrix.MatrixMultiply" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="encog_test.Matrix.TestMatrix.PackedArray" executed="True" success="True" time="0.000" asserts="6" />
                      <test-case name="encog_test.Matrix.TestMatrix.PackedArray2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="encog_test.Matrix.TestMatrix.Randomize" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="encog_test.Matrix.TestMatrix.RowAndColRangeOver" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="encog_test.Matrix.TestMatrix.RowAndColRangeUnder" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="encog_test.Matrix.TestMatrix.RowMatrix" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="encog_test.Matrix.TestMatrix.RowsAndCols" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="encog_test.Matrix.TestMatrix.Size" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrix.Sum" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrix.VectorLength" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrix.Zero" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="TestMatrixMath" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="encog_test.Matrix.TestMatrixMath.Copy" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrixMath.DeleteCol" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrixMath.DeleteRow" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrixMath.Divide" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrixMath.DotProduct" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrixMath.Identity" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrixMath.Inverse" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrixMath.Multiply" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrixMath.MultiplyScalar" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="encog_test.Matrix.TestMatrixMath.VerifySame" executed="True" success="True" time="0.016" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Neural" executed="True" success="True" time="2.172" asserts="0">
                <results>
                  <test-suite name="Networks" executed="True" success="True" time="2.031" asserts="0">
                    <results>
                      <test-suite name="Training" executed="True" success="True" time="2.031" asserts="0">
                        <results>
                          <test-suite name="TestAnneal" executed="True" success="True" time="0.391" asserts="0">
                            <results>
                              <test-case name="encog_test.Neural.Networks.Training.TestAnneal.testAnneal" executed="True" success="True" time="0.359" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="TestBackpropagation" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="encog_test.Neural.Networks.Training.TestBackpropagation.testCounts" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="encog_test.Neural.Networks.Training.TestBackpropagation.testPrune" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="encog_test.Neural.Networks.Training.TestBackpropagation.testToString" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="TestCompetitive" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="encog_test.Neural.Networks.Training.TestCompetitive.TestSOM" executed="True" success="True" time="0.031" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="TestGenetic" executed="True" success="True" time="1.547" asserts="0">
                            <results>
                              <test-case name="encog_test.Neural.Networks.Training.TestGenetic.testGenetic" executed="True" success="True" time="1.547" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Persist" executed="True" success="True" time="0.141" asserts="0">
                    <results>
                      <test-suite name="TestPersist" executed="True" success="True" time="0.141" asserts="0">
                        <results>
                          <test-case name="encog_test.Neural.Persist.TestPersist.testPersist" executed="True" success="True" time="0.141" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Util" executed="True" success="True" time="0.078" asserts="0">
                <results>
                  <test-suite name="TestSerializeObject" executed="True" success="True" time="0.063" asserts="0">
                    <results>
                      <test-case name="encog_test.Util.TestSerializeObject.testSerializeNetwork" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="encog_test.Util.TestSerializeObject.testSerializeNetwork2" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="encog_test.Util.TestSerializeObject.testSerializeXOR" executed="True" success="True" time="0.016" asserts="12" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>